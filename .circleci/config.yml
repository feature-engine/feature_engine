version: 2

defaults: &defaults
  docker:
    - image: circleci/python:3.7.2
  working_directory: ~/project

prepare_venv: &prepare_venv
  run:
    name: Create venv
    command: |
      python3 -m venv venv
      source venv/bin/activate
      pip install --upgrade pip

prepare_tox: &prepare_tox
  run:
    name: Install tox
    command: |
      sudo pip install --upgrade pip
      pip install --user tox

jobs:
  test_feature_engine_py36:
    docker:
      - image: circleci/python:3.6.9
    working_directory: ~/project
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Run tests with Python 3.6
          command: |
            tox -e py36

  test_feature_engine_py37:
    docker:
      - image: circleci/python:3.7.6
    working_directory: ~/project
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Run tests with Python 3.7
          command: |
            tox -e py37

  test_feature_engine_py38:
    docker:
      - image: circleci/python:3.8.0
    working_directory: ~/project
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Run tests with Python 3.8
          command: |
            tox -e py38

  test_style:
    docker:
      - image: circleci/python:3.8.0
    working_directory: ~/project
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Run stylechecks
          command: |
            tox -e stylechecks

  package_and_upload_to_pypi:
    <<: *defaults
    steps:
      - checkout
      - *prepare_venv
      - run:
          name: Install requirements
          command: |
            . venv/bin/activate
            pip install -r requirements.txt
            pip install -e .
            pip install wheel
            pip install twine
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = solegalli" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create package
          command: |
            rm -rf dist/*
            python setup.py sdist
            python setup.py bdist_wheel
      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*

workflows:
  version: 2
  test-all:
    jobs:
      - test_feature_engine_py36
      - test_feature_engine_py37
      - test_feature_engine_py38
      - test_style
      - package_and_upload_to_pypi:
          requires:
            - test_feature_engine_py36
            - test_feature_engine_py37
            - test_feature_engine_py38
            - test_style
          filters:
            branches:
              only:
                - master