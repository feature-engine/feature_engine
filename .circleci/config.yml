version: 2

defaults: &defaults
  docker:
    - image: circleci/python:3.7.2
  working_directory: ~/project

prepare_tox: &prepare_tox
  run:
    name: Install tox
    command: |
      sudo pip install --upgrade pip
      pip install --user tox

init_pypirc: &init_pypirc
  run:
    name: init .pypirc
    command: |
      echo -e "[pypi]" >> ~/.pypirc
      echo -e "repository = $FE_PYPI_URL" >> ~/.pypirc
      echo -e "username = $FE_PYPI_USER" >> ~/.pypirc
      echo -e "password = $FE_PYPI_API_KEY" >> ~/.pypirc

jobs:
  test_feature_engine_py36:
    docker:
      - image: circleci/python:3.6.9
    working_directory: ~/project
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Run tests with Python 3.6
          command: |
            tox -e py36

  test_feature_engine_py37:
    docker:
      - image: circleci/python:3.7.6
    working_directory: ~/project
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Run tests with Python 3.7
          command: |
            tox -e py37

  test_feature_engine_py38:
    docker:
      - image: circleci/python:3.8.0
    working_directory: ~/project
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Run tests with Python 3.8
          command: |
            tox -e py38

  test_style:
    docker:
      - image: circleci/python:3.8.0
    working_directory: ~/project
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Run stylechecks
          command: |
            tox -e stylechecks

  test_docs:
    docker:
      - image: circleci/python:3.8.0
    working_directory: ~/project
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Run doc build
          command: |
            tox -e docs

  package_and_upload_to_pypi:
    <<: *defaults
    steps:
      - checkout
      - *init_pypirc
      - run:
          name: upload to pypi
          command: |
            python -m venv env
            source env/bin/activate
            pip install --upgrade pip
            pip install twine wheel
            rm -rf dist/*
            python setup.py sdist bdist_wheel --universal
            ls -l dist
            twine upload dist/*

workflows:
  version: 2
  test-all:
    jobs:
      - test_feature_engine_py36
      - test_feature_engine_py37
      - test_feature_engine_py38
      - test_style
      - test_docs
      - package_and_upload_to_pypi:
          requires:
            - test_feature_engine_py36
            - test_feature_engine_py37
            - test_feature_engine_py38
            - test_style
            - test_docs
          filters:
            branches:
              only:
                - 0.6.X