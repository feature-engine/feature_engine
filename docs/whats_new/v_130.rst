Version 1.3.X
=============

Version 1.3.0
-------------

Deployed: 21st March 2022

Contributors
~~~~~~~~~~~~

    - `Morgan Sell <https://github.com/Morgan-Sell>`_
    - `Kishan Manani <https://github.com/KishManani>`_
    - `Gilles Verbockhaven <https://github.com/gverbock>`_
    - `Noah Green <https://github.com/noahjgreen295>`_
    - `Alejandro Giacometti <https://github.com/janrito>`_
    - `Soledad Galli <https://github.com/solegalli>`_

**In this release, we add the `get_feature_names_out` functionality to all our transformers!**
You asked for it, we delivered :)

In addition, we introduce 2 new transformers to create features for time series
forecasting: **LagFeatures** and **WindowFeatures**. We had the extraordinary support from
`Kishan Manani <https://github.com/KishManani>`_ who is an experienced forecaster, and
`Morgan Sell <https://github.com/Morgan-Sell>`_ who helped us draft the new classes.
Thank you both for the incredible work!

We also improved the functionality of our feature creation classes. To do this, we are
deprecating our former classes, `MathematicalCombination` and `CombineWithFeatureReference`,
which are a bit of a mouthful, for the new classes `MathFeatures` and `RelativeFeatures`.

We are also renaming the class `CyclicalTransformer` to `CyclicalFeatures`.

In addition, we've had some bug reports and bug fixes that we list below.

Thank you so much to all contributors to this release for making this massive release
possible!

New transformers
~~~~~~~~~~~~~~~~

    - **LagFeatures**: adds lag versions of the features (`Morgan Sell <https://github.com/Morgan-Sell>`_, `Kishan Manani <https://github.com/KishManani>`_ and `Soledad Galli <https://github.com/solegalli>`_)
    - **WindowFeatures**: creates features from operations on past time windows (`Morgan Sell <https://github.com/Morgan-Sell>`_, `Kishan Manani <https://github.com/KishManani>`_ and `Soledad Galli <https://github.com/solegalli>`_)
    - **MathFeatures**: replaces `MathematicalCombination` and expands its functionality (`Soledad Galli <https://github.com/solegalli>`_)
    - **RelativeFeatures**: replaces `CombineWithFeatureReference` and expands its functionality (`Soledad Galli <https://github.com/solegalli>`_)
    - **CyclicalFeatures**: rename for `CyclicalTransformer` with same functionality (`Soledad Galli <https://github.com/solegalli>`_)


Enhancements
~~~~~~~~~~~~

    - All our transformers have now the `get_feature_names_out` functionality to obtain the names of the output features (`Alejandro Giacometti <https://github.com/janrito>`_ and `Soledad Galli <https://github.com/solegalli>`_)
    - All our selector transformers can now check that the variables were not dropped in a previous selection step (`Gilles Verbockhaven <https://github.com/gverbock>`_)
    - The `DecisionTreeDiscretiser` and the `DecisionTreeEncoder` now check that the user enters a target suitable for regression or classification (`Morgan Sell <https://github.com/Morgan-Sell>`_)
    - The `DecisionTreeDiscretiser` and the `DecisionTreeEncoder` now accept all sklearn cross-validation constructors as parameter (`Soledad Galli <https://github.com/solegalli>`_)
    - The `SklearnTransformerWrapper` now implements the method inverse_transform (`Soledad Galli <https://github.com/solegalli>`_)
    - We expanded the functionality of `SklearnTransformerWrapper` to support additional transformers and improved its documentation (`Soledad Galli <https://github.com/solegalli>`_)


Bug fixes
~~~~~~~~~

    - The `SklearnTransformerWrapper` now works with cross-validation when using the one hot encoder (`Noah Green <https://github.com/noahjgreen295>`_)
    - `SelectByShuffling` evaluation of initial model performance and performance after shuffling is now carried in the same data (`Gilles Verbockhaven <https://github.com/gverbock>`_)


Documentation
~~~~~~~~~~~~~
    - We added a Jupyter notebook with a demo of the CyclicalFeatures class (`Soledad Galli <https://github.com/solegalli>`_)

Deprecations
~~~~~~~~~~~~

    - We are deprecating `MathematicalCombination`, `CombineWithFeatureReference` and `CyclicalTransformer` in version 1.3 and they will be removed in version 1.4

For developers
~~~~~~~~~~~~~~

    - Created functions and docstrings for common descriptions of methods and attributes (`Soledad Galli <https://github.com/solegalli>`_)
    - We introduce functions with common tests that should be applied to all transformers (`Soledad Galli <https://github.com/solegalli>`_)